import os
from fastapi import FastAPI, Request
from aiogram import Bot, Dispatcher, types
from openai import OpenAI

# –•—Ä–∞–Ω–∏–º —Ç–æ–∫–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

bot = Bot(token=TOKEN)
dp = Dispatcher()
app = FastAPI()

client = OpenAI(api_key=OPENAI_API_KEY)

@app.get("/")
async def root():
    return {"status": "ok"}

@app.post("/webhook/{token}")
async def webhook(request: Request, token: str):
    if token != TOKEN:
        return {"error": "invalid token"}
    data = await request.json()
    update = types.Update(**data)
    await dp.feed_update(bot, update)
    return {"ok": True}

async def drinking_buddy_reply(user_message: str) -> str:
    prompt = f"""
–¢—ã –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å–æ–±—É—Ç—ã–ª—å–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π –¥—Ä—É–∂–µ—Å–∫–∏, —Å —é–º–æ—Ä–æ–º,
–∫–∞–∫ –±—É–¥—Ç–æ —Å–∏–¥–∏—à—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–∞ –æ–¥–Ω–∏–º —Å—Ç–æ–ª–æ–º –∏ –≤—ã–ø–∏–≤–∞–µ—à—å.
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫–∞–∑–∞–ª: "{user_message}"
"""
    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt}],
        max_tokens=120
    )
    return response.choices[0].message.content.strip()

@dp.message(commands=["start"])
async def start_handler(message: types.Message):
    await message.answer("–≠–π! üçª –Ø —Ç–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å–æ–±—É—Ç—ã–ª—å–Ω–∏–∫. –ü–∏—à–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ ‚Äî –ø–æ–±–æ–ª—Ç–∞–µ–º, —Ä–∞—Å—Å–∫–∞–∂—É –∏—Å—Ç–æ—Ä–∏—é –∏–ª–∏ –ø–æ–¥—Å–∫–∞–∂—É —Ç–æ—Å—Ç.")

@dp.message()
async def chat_handler(message: types.Message):
    reply = await drinking_buddy_reply(message.text)
    await message.answer(reply)
